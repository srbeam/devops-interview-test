name: Build and Push to AWS ECR

on:
  push:
    tags:
      - 'v*'  # Runs on version tags like v1.0.0

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Extract version from tag
        id: extract_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build and push backend image
        run: |
          docker build -t ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.AWS_ECR_REPOSITORY_BACKEND }}:${{ env.VERSION }} ./backend
          docker push ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.AWS_ECR_REPOSITORY_BACKEND }}:${{ env.VERSION }}

      - name: Build and push frontend image
        run: |
          docker build -t ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.AWS_ECR_REPOSITORY_FRONTEND }}:${{ env.VERSION }} ./frontend
          docker push ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.AWS_ECR_REPOSITORY_FRONTEND }}:${{ env.VERSION }}

      # # (Optional) Security Scan using Trivy
      # - name: Security Scan with Trivy
      #   continue-on-error: true
      #   run: |
      #     docker pull ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.AWS_ECR_REPOSITORY_BACKEND }}:${{ env.VERSION }}
      #     trivy image --exit-code 1 --severity CRITICAL,HIGH ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.AWS_ECR_REPOSITORY_BACKEND }}:${{ env.VERSION }}

      #     docker pull ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.AWS_ECR_REPOSITORY_FRONTEND }}:${{ env.VERSION }}
      #     trivy image --exit-code 1 --severity CRITICAL,HIGH ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.AWS_ECR_REPOSITORY_FRONTEND }}:${{ env.VERSION }}
